docker build -t geth-local .
docker run --name geth-local  --rm -it -p 8545:8545 geth-local
docker exec -it geth-local bash

solc HelloWorld.solc --bin --abi --optimize -o ./

web3j solidity generate helloworld.bin helloworld.abi -o . -p org.web3j.sample


web3.personal.newAccount("12345")
web3.personal.unlockAccount("0xe7b0600cd184432527b3ea401eebb5dc5d05b855","0")
eth.sendTransaction({from:"0xe7b0600cd184432527b3ea401eebb5dc5d05b855",to:"0x6b411b139eac49800b5f3b8bb69fb39decb6879d",value:web3.toWei(0.05, "ether")})
web3.fromWei( eth.getBalance("0x6b411b139eac49800b5f3b8bb69fb39decb6879d"))


var hellosolContract = web3.eth.contract([{"inputs":[],"name":"getString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"newString","type":"string"}],"name":"setString","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}]);
var hellosol = hellosolContract.new(
   {
     from: web3.eth.accounts[0],
     data: '0x608060405234801561001057600080fd5b50610386806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632096525514610051578063552410771461006f5780637fcaf6661461009d57806389ea642f14610158575b600080fd5b6100596101db565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b81019080803590602001909291905050506101e5565b005b610156600480360360208110156100b357600080fd5b81019080803590602001906401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101ef565b005b610160610209565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a0578082015181840152602081019050610185565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000600154905090565b8060018190555050565b80600090805190602001906102059291906102ab565b5050565b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a15780601f10610276576101008083540402835291602001916102a1565b820191906000526020600020905b81548152906001019060200180831161028457829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102ec57805160ff191683800117855561031a565b8280016001018555821561031a579182015b828111156103195782518255916020019190600101906102fe565b5b509050610327919061032b565b5090565b61034d91905b80821115610349576000816000905550600101610331565b5090565b9056fea2646970667358221220828554b96adb39540033a441f1754e77892dc0515e1332944ea561cc8300c6ad64736f6c63430006010033',
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })


var hellosolContract = web3.eth.contract([
                                         	{
                                         		"inputs": [],
                                         		"name": "getString",
                                         		"outputs": [
                                         			{
                                         				"internalType": "string",
                                         				"name": "",
                                         				"type": "string"
                                         			}
                                         		],
                                         		"stateMutability": "view",
                                         		"type": "function"
                                         	},
                                         	{
                                         		"inputs": [],
                                         		"name": "getValue",
                                         		"outputs": [
                                         			{
                                         				"internalType": "uint256",
                                         				"name": "",
                                         				"type": "uint256"
                                         			}
                                         		],
                                         		"stateMutability": "view",
                                         		"type": "function"
                                         	},
                                         	{
                                         		"inputs": [
                                         			{
                                         				"internalType": "string",
                                         				"name": "newString",
                                         				"type": "string"
                                         			}
                                         		],
                                         		"name": "setString",
                                         		"outputs": [],
                                         		"stateMutability": "nonpayable",
                                         		"type": "function"
                                         	},
                                         	{
                                         		"inputs": [
                                         			{
                                         				"internalType": "uint256",
                                         				"name": "newValue",
                                         				"type": "uint256"
                                         			}
                                         		],
                                         		"name": "setValue",
                                         		"outputs": [],
                                         		"stateMutability": "nonpayable",
                                         		"type": "function"
                                         	}
                                         ])